version: '3.8'
services:
  frontend:
    build: .
    command: npm run dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
    depends_on:
      - listing

  listing:
    build: ./backend/listing_context
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  scanner:
    build: ./backend/scanner_context
    command: uvicorn app:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - listing
      - db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  dmca:
    build: ./backend/dmca_context
    command: uvicorn app:app --host 0.0.0.0 --port 8002 --reload
    ports:
      - "8002:8002"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
